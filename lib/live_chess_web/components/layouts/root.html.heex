<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="csrf-token" content={get_csrf_token()} />
    <.live_title default="LiveView Chess">
      {assigns[:page_title]}
    </.live_title>
    <link phx-track-static rel="stylesheet" href={~p"/assets/css/app.css"} />
    <link rel="icon" type="image/svg+xml" href={~p"/favicon.svg"} />
    <script defer phx-track-static type="text/javascript" src={~p"/assets/js/app.js"}>
    </script>
    <script>
      (() => {
        const applyDarkClass = (theme) => {
          const systemPrefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
          const isDark = theme === "dark" || (theme === "system" && systemPrefersDark);
          document.documentElement.classList.toggle("dark", isDark);
        };

        const setTheme = (theme) => {
          if (theme === "system") {
            localStorage.removeItem("phx:theme");
            document.documentElement.removeAttribute("data-theme");
          } else {
            localStorage.setItem("phx:theme", theme);
            document.documentElement.setAttribute("data-theme", theme);
          }
          applyDarkClass(theme);
        };

        const storedTheme = localStorage.getItem("phx:theme") || "system";
        setTheme(storedTheme);

        if (window.matchMedia) {
          const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
          const handleChange = () => {
            if ((localStorage.getItem("phx:theme") || "system") === "system") {
              applyDarkClass("system");
            }
          };
          if (typeof mediaQuery.addEventListener === "function") {
            mediaQuery.addEventListener("change", handleChange);
          } else if (typeof mediaQuery.addListener === "function") {
            mediaQuery.addListener(handleChange);
          }
        }

        window.addEventListener("storage", (event) => {
          if (event.key === "phx:theme") {
            setTheme(event.newValue || "system");
          }
        });

        window.addEventListener("phx:set-theme", ({ detail: { theme } }) => setTheme(theme));
      })();
    </script>
  </head>
  <body class="bg-slate-100 text-slate-900 dark:bg-slate-950 dark:text-slate-100">
    <div class="flex min-h-screen flex-col">
      <main class="flex-1">
        {@inner_content}
      </main>
      <footer class="border-t border-slate-200 bg-white/80 px-6 py-6 text-sm text-slate-600 backdrop-blur dark:border-slate-800 dark:bg-slate-950/80 dark:text-slate-300">
        <div class="mx-auto flex max-w-6xl flex-wrap items-center justify-between gap-6">
          <div class="flex items-center gap-3">
            <span class="flex h-9 w-9 items-center justify-center rounded-full bg-emerald-500/10 text-base text-emerald-600 dark:bg-emerald-400/10 dark:text-emerald-300">
              ♟
            </span>
            <div>
              <p class="text-sm font-semibold text-slate-700 dark:text-slate-100">
                LiveView Chess
              </p>
              <p class="text-xs text-slate-500 dark:text-slate-400">
                Realtime chess built with Phoenix LiveView.
              </p>
            </div>
          </div>
          <div class="flex items-center gap-4 text-sm font-medium text-slate-600 dark:text-slate-300">
            <a
              class="transition hover:text-emerald-600 dark:hover:text-emerald-300"
              href="https://dimamik.com"
              target="_blank"
              rel="noopener"
            >
              dimamik.com
            </a>
            <span class="opacity-40">•</span>
            <a
              class="transition hover:text-emerald-600 dark:hover:text-emerald-300"
              href="https://github.com/dimamik/live_chess"
              target="_blank"
              rel="noopener"
            >
              GitHub source
            </a>
          </div>
        </div>
      </footer>
    </div>
  </body>
</html>
