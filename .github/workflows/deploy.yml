name: Test and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  MIX_ENV: test
  IMAGE_NAME: dimamik/live_chess

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '27.3.2'
          elixir-version: '1.18.3'
      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-deps-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Install Hex/Rebar
        run: |
          mix local.hex --force
          mix local.rebar --force
      - name: Install dependencies
        run: mix deps.get
      - name: Compile
        run: mix compile
      - name: Prepare database
        run: |
          mix ecto.create --quiet
          mix ecto.migrate --quiet
      - name: Check formatting
        run: mix format --check-formatted
      - name: Run tests
        run: mix test

  docker:
    runs-on: ubuntu-latest
    needs: test
    env:
      MIX_ENV: prod
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move new cache into place
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
